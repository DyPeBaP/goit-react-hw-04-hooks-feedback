{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","type","className","s","button","onClick","Notification","message","Section","title","children","section","Statistics","good","neutral","bad","total","positivePercentage","list","item","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,qICEb,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SACLC,UAAWC,IAAEC,OAEbC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GAHIA,M,oBCJI,SAASM,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGL,UAAWC,IAAEI,QAAhB,SAA0BA,I,oBCFpB,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASR,UAAWC,IAAEQ,QAAtB,UACE,mBAAGT,UAAWC,IAAEM,MAAhB,SAAwBA,IACvBC,K,oBCJQ,SAASE,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9D,OACE,qBAAIf,UAAWC,IAAEe,KAAjB,UACE,qBAAIhB,UAAWC,IAAEgB,KAAjB,mBAA8BN,KAC9B,qBAAIX,UAAWC,IAAEgB,KAAjB,sBAAiCL,KACjC,qBAAIZ,UAAWC,IAAEgB,KAAjB,kBAA6BJ,KAC7B,qBAAIb,UAAWC,IAAEgB,KAAjB,oBAA+BH,KAC/B,qBAAId,UAAWC,IAAEgB,KAAjB,gCAA2CF,EAA3C,UCJS,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAiBQC,EAAqB,WAE7B,OADeZ,EAAOC,EAAUC,GAS/B,OACG,qCACE,cAACP,EAAD,CAASC,MAAM,wBAAf,SACE,cAACb,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA9Bc,SAACE,GACrB,OAAQA,GACN,IAAK,OAAQsB,GAAQ,SAAAI,GAAQ,OAAIA,EAAW,KAC1C,MAEF,IAAK,UAAWH,GAAW,SAAAI,GAAW,OAAIA,EAAc,KACtD,MAEF,IAAK,MAAOH,GAAO,SAAAI,GAAO,OAAIA,EAAU,KACtC,MACF,QACE,aAsBF,cAACpB,EAAD,CAASC,MAAM,aAAf,SACGgB,IACC,cAACb,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAlBHY,KAAKC,MAAOjB,EAAOY,IAAwB,MAAQ,IAqBlD,cAACnB,EAAD,CAAcC,QAAQ,2BCjDlCwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.9bd68ef3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3F9l-\",\"item\":\"Statistics_item__1MBjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1BkWh\",\"title\":\"Section_title__13KzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1BZdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3Kyow\"};","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      className={s.button}\r\n      key={option}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <p className={s.title}>{title}</p>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      <li className={s.item}>Good: {good}</li>\r\n      <li className={s.item}>Neutral: {neutral}</li>\r\n      <li className={s.item}>Bad: {bad}</li>\r\n      <li className={s.item}>Total: {total}</li>\r\n      <li className={s.item}>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\n","import { useState } from \"react\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\r\nimport Notification from \"./components/Notification/Notification\";\r\nimport Section from \"./components/Section/Section\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n      const addFeedback = (option) => {\r\n      switch (option) {\r\n        case \"good\": setGood(prevGood => prevGood + 1);\r\n          break;\r\n          \r\n        case \"neutral\": setNeutral(prevNeutral => prevNeutral + 1);\r\n          break;\r\n          \r\n        case \"bad\": setBad(prevBad => prevBad + 1);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n\r\n    const countTotalFeedback = () => {\r\n\t\tconst result = good + neutral + bad;\r\n\t\treturn result;\r\n  };\r\n  \r\n    const countPositiveFeedbackPercentage = () => {\r\n    // const { good } = state;\r\n    return Math.round((good / countTotalFeedback()) * 100) || 0;\r\n  };\r\n\r\n   return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={[\"good\", \"neutral\", \"bad\"]}\r\n            onLeaveFeedback={addFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback() ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            ></Statistics>\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}